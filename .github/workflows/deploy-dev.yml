name: Deploy to Dev Environment

on:
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch name to build from'
        required: true
        default: 'main'
        type: string
      tag:
        description: 'Docker image tag to deploy (default: latest)'
        required: false
        default: 'latest'
        type: string

env:
  PROJECT_ID: d-stats-tsa
  REGION: asia-northeast1
  SERVICE_NAME: tsa-app
  REPOSITORY: cloud-run-source-deploy

jobs:
  # Build and deploy for both PR testing and manual triggers
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    environment: dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || github.head_ref || github.ref }}

      - name: Set deployment variables
        run: |
          echo "IMAGE_TAG=${{ github.event.inputs.tag || github.sha }}" >> $GITHUB_ENV

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Run lint
        run: npm run lint

      - name: Run type check
        run: npm run type-check

      - name: Build application
        run: npm run build

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/752503730439/locations/global/workloadIdentityPools/github/providers/github-provider
          service_account: github-actions@d-stats-tsa.iam.gserviceaccount.com
          token_format: access_token

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker to use gcloud as credential helper
        run: gcloud auth configure-docker $REGION-docker.pkg.dev

      - name: Build Docker image
        run: |
          docker build \
            --tag $REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE_NAME:$IMAGE_TAG \
            --tag $REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE_NAME:latest \
            .

      - name: Push Docker image to Artifact Registry
        run: |
          docker push $REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE_NAME:$IMAGE_TAG
          docker push $REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE_NAME:latest

      - name: Deploy to Cloud Run
        run: |
          echo "Updating Cloud Run service with new image: $REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE_NAME:$IMAGE_TAG"

          gcloud run services update $SERVICE_NAME \
            --image $REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE_NAME:$IMAGE_TAG \
            --region $REGION \
            --project $PROJECT_ID

      - name: Get service URL
        run: |
          SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region $REGION --project $PROJECT_ID --format 'value(status.url)')
          echo "Service deployed to: $SERVICE_URL"
          echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_ENV

      - name: Health check
        run: |
          echo "Waiting for service to be ready..."
          sleep 30
          curl -f $SERVICE_URL/api/health || exit 1
          echo "Health check passed!"
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "PR testing deployment successful from branch '${{ github.head_ref }}': $SERVICE_URL"
          else
            echo "Dev environment deployment successful from branch '${{ github.event.inputs.branch }}': $SERVICE_URL"
          fi
